name: Build and deploy prod version Wallkit Integration Library

on:
  push:
    branches:
      - feature/setup-github-actions
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Check if lib version already exist
        id: check-lib-version
        run: |
          totalFoundObjects=$(aws s3 ls s3://wallkit-integration-prod/${{ steps.package-version.outputs.current-version}}/wallkit-integration-library.min.js --summarize | grep "Total Objects: " | sed 's/[^0-9]*//g')
          echo "totalFoundObjects: $totalFoundObjects"
#          if [ $? == 0 ]
#          then
#            echo "exist-current-lib-version=false" >> $GITHUB_OUTPUT
#          else
#            echo "exist-current-lib-version=true" >> $GITHUB_OUTPUT
#          fi
      - name: Debug vars
        id: debug-vars
        run: |
          echo "Lib version: ${{ steps.package-version.outputs.current-version }}"
          echo "Exist current lib version on S3: ${{ steps.check-lib-version.outputs.exist-current-lib-version }}"

#      - name: Deploy to S3
#        run: aws s3 sync ./dist/. s3://wallkit-integration-prod/latest --exclude '*.html' --exclude '*.txt'
#      - name: Invalidate CloudFront
#        uses: chetan/invalidate-cloudfront-action@v2
#        env:
#          DISTRIBUTION: ${{ secrets.DEV_DISTRIBUTION_ID }}
#          PATHS: "/latest/*"
#          AWS_REGION: us-east-1
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
