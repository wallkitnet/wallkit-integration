name: Build and deploy prod version Wallkit Integration Library

on:
  push:
    branches:
      - feature/setup-github-actions

env:
  S3_BUCKET: wallkit-integration-test
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: |
          echo "Installing dependencies"
          npm ci

      - name: Build project
        run: |
          echo "Building project"
          npm run build

      - name: Deploy to S3
        run: |
          echo "Deploying to S3"
          version=$(cat package.json | jq -r '.version')
          existing_versions=$(aws s3 ls s3://${S3_BUCKET}/ --recursive | awk '{print $2}' | grep -oP '[\d]+\.[\d]+\.[\d]+')
          echo "Existing versions: existing_versions[@]"
          is_exists=false
          for existing_version in $existing_versions
          do
            if [ "$version" = "$existing_version" ]; then
              is_exists=true
              break
            fi
          done
          
          if [ "$is_exists" = false ]; then
            echo "is_exists: false"
            aws s3 sync ./dist/. s3://${S3_BUCKET}/${version}/ --exclude '*.html' --exclude '*.txt'
            if [ $? -eq 0 ]; then
              ln -sfn ${version} latest
              aws s3 cp latest s3://${S3_BUCKET}/ --recursive
            fi
          elif [ "$version" \> "$existing_version" ]; then
            echo "version > existing_version"
            aws s3 sync ./dist/. s3://${S3_BUCKET}/${version}/ --exclude '*.html' --exclude '*.txt'
            if [ $? -eq 0 ]; then
              ln -sfn ${version} latest
              aws s3 cp latest s3://${S3_BUCKET}/ --recursive
            fi
       
